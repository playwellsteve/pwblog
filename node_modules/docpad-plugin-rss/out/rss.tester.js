// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  module.exports = function(testers) {
    var RssTester;
    return RssTester = (function(superClass) {
      extend(RssTester, superClass);

      function RssTester() {
        return RssTester.__super__.constructor.apply(this, arguments);
      }

      RssTester.prototype.config = {
        removeWhitespace: true,
        contentRemoveRegex: /\<(lastBuild|pub)Date\>.*\<\/(lastBuild|pub)Date\>/g
      };

      RssTester.prototype.docpadConfig = {
        templateData: {
          site: {
            url: 'http://my-site-url.com',
            title: 'site title',
            description: 'site description',
            author: 'eric.vantillard@evaxion.fr',
            date: new Date('Mon, 27 Jan 2014 13:01:00 GMT')
          }
        },
        plugins: {
          rss: {
            collection: 'all',
            url: '/rss.xml',
            folder1: {
              collection: 'folder1',
              url: '/rss-folder1.xml',
              title: 'Custom title'
            },
            folders: {
              collection: 'folders',
              url: '/rss-folders.xml'
            }
          }
        },
        collections: {
          all: function() {
            return this.getCollection('html').findAllLive({}, [
              {
                date: -1
              }
            ]);
          },
          folder1: function() {
            return this.getCollection('html').findAllLive({
              relativeOutDirPath: {
                $startsWith: 'folder1'
              }
            }, [
              {
                date: -1
              }
            ]);
          },
          folders: function() {
            return this.getCollection('html').findAllLive({
              $or: [
                {
                  relativeOutDirPath: {
                    $startsWith: 'folder1'
                  }
                }, {
                  relativeOutDirPath: {
                    $startsWith: 'folder2'
                  }
                }
              ]
            }, [
              {
                date: -1
              }
            ]);
          }
        },
        enabledPlugins: {
          'marked': true,
          'eco': true
        }
      };

      return RssTester;

    })(testers.RendererTester);
  };

}).call(this);
